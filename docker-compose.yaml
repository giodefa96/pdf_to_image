version: "3.8"

services:
  frontend:
    image: giodefa996/frontend:0.0.4
    container_name: frontend-app
    ports:
      - "8501:8501"
    extra_hosts:
      - "localhost:172.17.0.1"
    depends_on:
      - backend
    volumes:
      - ./certs/ca.crt:/usr/local/lib/python3.12/site-packages/src/certs/ca.crt:ro
      - ./certs/streamlit-client.key:/usr/local/lib/python3.12/site-packages/src/certs/streamlit-client.key:ro
      - ./certs/streamlit-client.crt:/usr/local/lib/python3.12/site-packages/src/certs/streamlit-client.crt:ro
    environment:
      - AZURE_STORAGE_CONNECTION_STRING=${AZURE_STORAGE_CONNECTION_STRING}
      - CERT_FILE_PATH=${CERT_FILE_PATH}
      - API_HOST=${API_HOST}
      - PATH_CRT=${PATH_CRT}
      - PATH_CRT_KEY=${PATH_CRT_KEY}
      - STREAMLIT_SERVER_PORT=${STREAMLIT_SERVER_PORT}
      - STREAMLIT_SERVER_ENABLE_CORS=${STREAMLIT_SERVER_ENABLE_CORS}
      - STREAMLIT_SERVER_ENABLE_XSRF=${STREAMLIT_SERVER_ENABLE_XSRF}
      - STREAMLIT_SERVER_SSL_CERT_FILE=${STREAMLIT_SERVER_SSL_CERT_FILE}
      - STREAMLIT_SERVER_SSL_KEY_FILE=${STREAMLIT_SERVER_SSL_KEY_FILE}
      - STREAMLIT_SERVER_HEADLESS=${STREAMLIT_SERVER_HEADLESS}
      - STREAMLIT_SERVER_RUNNING_IN_HTTPS=${STREAMLIT_SERVER_RUNNING_IN_HTTPS}
  backend:
    image: giodefa996/backend:0.0.2
    container_name: backend-api
    expose:
      - "8000"
    restart: always
    depends_on:
      - database
      - storage
    environment:
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - AZURE_STORAGE_CONNECTION_STRING=${AZURE_STORAGE_CONNECTION_STRING}
      - AZURE_STORAGE_CONTAINER_NAME=${AZURE_STORAGE_CONTAINER_NAME}
      - PDF_BATCH_SIZE=${PDF_BATCH_SIZE}
  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf.template:/etc/nginx/templates/default.conf.template
      - ./certs:/etc/nginx/certs:ro
    depends_on:
      - backend
      - frontend
    restart: always
    environment:
      - BACKEND_HOST=${BACKEND_HOST}
      - BACKEND_PORT=${BACKEND_PORT}
  database:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
  storage:
    image: mcr.microsoft.com/azure-storage/azurite:latest
    container_name: azurite
    ports:
      - "${AZURITE_BLOB_PORT}:10000" # Blob service
      - "${AZURITE_QUEUE_PORT}:10001" # Queue service
      - "${AZURITE_TABLE_PORT}:10002" # Table service
    volumes:
      - azurite_data:/data

volumes:
  db_data:
  azurite_data:
